public net.minecraft.world.level.levelgen.NoiseChunk blockStateRule #private
public net.minecraft.world.level.levelgen.NoiseBasedChunkGenerator settings #private
public net.minecraft.world.level.chunk.ChunkGenerator biomeSource #protected
public net.minecraft.world.level.levelgen.NoiseBasedChunkGenerator globalFluidPicker #private
public net.minecraft.world.level.entity.EntityTickList active #private
public net.minecraft.world.level.entity.EntityTickList iterated #private

public net.minecraft.world.level.levelgen.NoiseBasedChunkGenerator createNoiseChunk(Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/levelgen/blending/Blender;Lnet/minecraft/world/level/levelgen/RandomState;)Lnet/minecraft/world/level/levelgen/NoiseChunk; #private
public net.minecraft.world.level.levelgen.NoiseBasedChunkGenerator debugPreliminarySurfaceLevel(Lnet/minecraft/world/level/levelgen/NoiseChunk;IIILnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; #private
public net.minecraft.world.level.levelgen.NoiseChunk cachedClimateSampler(Lnet/minecraft/world/level/levelgen/NoiseRouter;Ljava/util/List;)Lnet/minecraft/world/level/biome/Climate$Sampler; #protected
public net.minecraft.world.level.levelgen.NoiseChunk cellWidth()I #protected
public net.minecraft.world.level.levelgen.NoiseChunk cellHeight()I #protected
public net.minecraft.world.level.levelgen.NoiseChunk getInterpolatedState()Lnet/minecraft/world/level/block/state/BlockState; #protected

public net.minecraft.world.level.levelgen.DensityFunctions$BeardifierMarker #protected
public net.minecraft.world.level.levelgen.DensityFunctions$BlendAlpha #protected
public net.minecraft.world.level.levelgen.DensityFunctions$BlendOffset #protected
public net.minecraft.world.level.levelgen.DensityFunctions$Marker #protected